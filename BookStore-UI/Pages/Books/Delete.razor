@page "/book/delete/{Id}"

@attribute [Authorize(Roles = "Administrator")]
@inject IAuthorRepository _authorRepository
@inject IBookRepository _repository
@inject NavigationManager _navigation
@inject IFileUpload _fileUpload

<h3>Delete Book</h3>
@if (Convert.ToInt32(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <LoadingMessage Message="Invalid selection. Please try again." />
}
else
{
    if (Model == null)
    {
        <div class="alert alert-dismissible alert-secondary">
            <LoadingMessage Message="Loading Book Details......" />
        </div>
    }
    else
    {
        <div class="col-md-6">
            <table class="table table-responsive">
                <tr>
                    <td><strong>Title</strong></td>
                    <td>@Model.Title</td>
                </tr>
                <tr>
                    <td><strong>Author</strong></td>
                    <td>
                        @if (Model.Author == null)
                        {
                            <span>No Author</span>
                        }
                        else
                        {
                            <a href="/authors/view/@Model.AuthorId">@Model.Author.Firstname @Model.Author.Lastname</a>
                        }
                    </td>
                </tr>
                <tr>
                    <td><strong>Summary</strong></td>
                    <td>@Model.Summary</td>
                </tr>
                <tr>
                    <td><strong>Published Year</strong></td>
                    <td>@Model.Year</td>
                </tr>
                <tr>
                    <td><strong>ISBN</strong></td>
                    <td>@Model.Isbn</td>
                </tr>
            </table>
        </div>

        <div class="col-md-4">
            <img src="~/uploads/@Model.Image" style="height:300px; width:300px" />
            <h3 class="text-center text-info">@Model.Price</h3>
        </div>
    }
}
<button class="btn btn-outline-secondary" @onclick="DeleteBook">
    <span class="oi oi-x">Delete</span>
</button>

<a href="/books/" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
</a>


@code {
    [Parameter]
    public string Id { get; set; }

    private Book Model = new Book();
    private bool isFailed = true;

    protected async override Task OnInitializedAsync()
    {
        int id = Convert.ToInt32(Id);
        Model = await _repository.Get(Endpoints.BooksEndpoint, id);
    }

    private void BackToList()
    {
        _navigation.NavigateTo("/books/");
    }

    private async Task DeleteBook()
    {
        _fileUpload.RemoveFile(Model.Image);
        bool isSuccess = await _repository.Delete(Endpoints.BooksEndpoint, Model.Id);
        if (isSuccess)
        {
            BackToList();
        }
        else
        {

        }
    }
}
